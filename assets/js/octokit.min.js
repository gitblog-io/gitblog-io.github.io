(function(){var Octokit,Promise,XMLHttpRequest,allPromises,createGlobalAndAMD,encode,err,injector,makeOctokit,newPromise,_,_ref,_this=this,__hasProp={}.hasOwnProperty,__extends=function(child,parent){function ctor(){this.constructor=child}for(var key in parent)__hasProp.call(parent,key)&&(child[key]=parent[key]);return ctor.prototype=parent.prototype,child.prototype=new ctor,child.__super__=parent.prototype,child},__slice=[].slice;_={},_.isEmpty=function(object){return 0===Object.keys(object).length},_.isArray=Array.isArray||function(obj){return"[object Array]"===toString.call(obj)},_.defaults=function(object,values){var key,_i,_len,_ref,_results;for(_ref=Object.keys(values),_results=[],_i=0,_len=_ref.length;_len>_i;_i++)key=_ref[_i],_results.push(function(key){return null!=object[key]?object[key]:object[key]=values[key]}(key));return _results},_.each=function(object,fn){var arr,key,_i,_len,_ref,_results;if(object){for(_.isArray(object)&&object.forEach(fn),arr=[],_ref=Object.keys(object),_results=[],_i=0,_len=_ref.length;_len>_i;_i++)key=_ref[_i],_results.push(function(key){return fn(object[key])}(key));return _results}},_.pairs=function(object){var arr,key,_fn,_i,_len,_ref;for(arr=[],_ref=Object.keys(object),_fn=function(key){return arr.push([key,object[key]])},_i=0,_len=_ref.length;_len>_i;_i++)key=_ref[_i],_fn(key);return arr},_.map=function(object,fn){var arr,key,_fn,_i,_len,_ref;if(_.isArray(object))return object.map(fn);for(arr=[],_ref=Object.keys(object),_fn=function(key){return arr.push(fn(object[key]))},_i=0,_len=_ref.length;_len>_i;_i++)key=_ref[_i],_fn(key);return arr},_.last=function(object,n){var len;return len=object.length,object.slice(len-n,len)},_.select=function(object,fn){return object.filter(fn)},_.extend=function(object,template){var key,_fn,_i,_len,_ref;for(_ref=Object.keys(template),_fn=function(key){return object[key]=template[key]},_i=0,_len=_ref.length;_len>_i;_i++)key=_ref[_i],_fn(key);return object},_.toArray=function(object){return Array.prototype.slice.call(object)},makeOctokit=function(newPromise,allPromises,XMLHttpRequest,base64encode,userAgent){var Octokit,ajax,rejectedPromise,resolvedPromise;return ajax=function(options){return newPromise(function(resolve,reject){var name,value,xhr,_ref;xhr=new XMLHttpRequest,xhr.dataType=options.dataType,"function"==typeof xhr.overrideMimeType&&xhr.overrideMimeType(options.mimeType),xhr.open(options.type,options.url),options.data&&"GET"!==options.type&&xhr.setRequestHeader("Content-Type",options.contentType),_ref=options.headers;for(name in _ref)value=_ref[name],xhr.setRequestHeader(name,value);return xhr.onreadystatechange=function(){var _name,_ref1;return 4===xhr.readyState?(null!=(_ref1=options.statusCode)&&"function"==typeof _ref1[_name=xhr.status]&&_ref1[_name](),xhr.status>=200&&xhr.status<300||304===xhr.status?resolve(xhr):reject(xhr)):void 0},xhr.send(options.data)})},resolvedPromise=function(val){return newPromise(function(resolve,reject){return resolve(val)})},rejectedPromise=function(err){return newPromise(function(resolve,reject){return reject(err)})},Octokit=function(){function Octokit(clientOptions){var AuthenticatedUser,Branch,ETagResponse,Gist,GitRepo,Organization,Repository,Team,User,clearCache,getCache,notifyEnd,notifyStart,setCache,toQueryString,_cachedETags,_client,_listeners,_request;null==clientOptions&&(clientOptions={}),_.defaults(clientOptions,{rootURL:"https://api.github.com",useETags:!0,usePostInsteadOfPatch:!1}),_client=this,_listeners=[],ETagResponse=function(){function ETagResponse(eTag,data,status){this.eTag=eTag,this.data=data,this.status=status}return ETagResponse}(),_cachedETags={},notifyStart=function(promise,path){return"function"==typeof promise.notify?promise.notify({type:"start",path:path}):void 0},notifyEnd=function(promise,path){return"function"==typeof promise.notify?promise.notify({type:"end",path:path}):void 0},_request=function(method,path,data,options){var auth,headers,mimeType,promise;return null==options&&(options={raw:!1,isBase64:!1,isBoolean:!1}),"PATCH"===method&&clientOptions.usePostInsteadOfPatch&&(method="POST"),/^http/.test(path)||(path=""+clientOptions.rootURL+path),mimeType=void 0,options.isBase64&&(mimeType="text/plain; charset=x-user-defined"),headers={Accept:"application/vnd.github.raw"},userAgent&&(headers["User-Agent"]=userAgent),path in _cachedETags?headers["If-None-Match"]=_cachedETags[path].eTag:headers["If-Modified-Since"]="Thu, 01 Jan 1970 00:00:00 GMT",(clientOptions.token||clientOptions.username&&clientOptions.password)&&(auth=clientOptions.token?"token "+clientOptions.token:"Basic "+base64encode(""+clientOptions.username+":"+clientOptions.password),headers.Authorization=auth),promise=newPromise(function(resolve,reject){var ajaxConfig,always,onError,xhrPromise,_this=this;return ajaxConfig={url:path,type:method,contentType:"application/json",mimeType:mimeType,headers:headers,processData:!1,data:!options.raw&&data&&JSON.stringify(data)||data,dataType:options.raw?void 0:"json"},options.isBoolean&&(ajaxConfig.statusCode={204:function(){return resolve(!0)},404:function(){return resolve(!1)}}),xhrPromise=ajax(ajaxConfig),always=function(jqXHR){var listener,rateLimit,rateLimitRemaining,_i,_len,_results;for(notifyEnd(_this,path),rateLimit=parseFloat(jqXHR.getResponseHeader("X-RateLimit-Limit")),rateLimitRemaining=parseFloat(jqXHR.getResponseHeader("X-RateLimit-Remaining")),_results=[],_i=0,_len=_listeners.length;_len>_i;_i++)listener=_listeners[_i],_results.push(listener(rateLimitRemaining,rateLimit,method,path,data,options));return _results},xhrPromise.then(function(jqXHR){var converted,eTag,eTagResponse,i,links,valOptions,_i,_ref;if(always(jqXHR),304===jqXHR.status)return clientOptions.useETags&&_cachedETags[path]?(eTagResponse=_cachedETags[path],resolve(eTagResponse.data,eTagResponse.status,jqXHR)):resolve(jqXHR.responseText,status,jqXHR);if(204===jqXHR.status&&options.isBoolean)return resolve(!0,status,jqXHR);if(jqXHR.responseText&&"json"===ajaxConfig.dataType?(data=JSON.parse(jqXHR.responseText),valOptions={},links=jqXHR.getResponseHeader("Link"),_.each(null!=links?links.split(","):void 0,function(part){var discard,href,rel,_ref;return _ref=part.match(/<([^>]+)>;\ rel="([^"]+)"/),discard=_ref[0],href=_ref[1],rel=_ref[2],valOptions[""+rel+"Page"]=function(){return _request("GET",href,null,options)}}),_.extend(data,valOptions)):data=jqXHR.responseText,"GET"===method&&options.isBase64){for(converted="",i=_i=0,_ref=data.length;_ref>=0?_ref>=_i:_i>=_ref;i=_ref>=0?++_i:--_i)converted+=String.fromCharCode(255&data.charCodeAt(i));data=converted}return"GET"===method&&jqXHR.getResponseHeader("ETag")&&clientOptions.useETags&&(eTag=jqXHR.getResponseHeader("ETag"),_cachedETags[path]=new ETagResponse(eTag,data,jqXHR.status)),resolve(data,jqXHR.status,jqXHR)}),onError=function(jqXHR){var err,json;return always(jqXHR),options.isBoolean&&404===jqXHR.status?resolve(!1):"application/json; charset=utf-8"!==jqXHR.getResponseHeader("Content-Type")?(err=new Error(jqXHR.responseText),err.status=jqXHR.status,err.__jqXHR=jqXHR,reject(err)):(err=new Error("Github error: "+jqXHR.responseText),json=jqXHR.responseText?JSON.parse(jqXHR.responseText):"",err.error=json,err.status=jqXHR.status,err.__jqXHR=jqXHR,reject(err))},("function"==typeof xhrPromise["catch"]?xhrPromise["catch"](onError):void 0)||xhrPromise.fail(onError)}),notifyStart(promise,path),promise},toQueryString=function(options){var params;return _.isEmpty(options)?"":(params=[],_.each(_.pairs(options),function(_arg){var key,value;return key=_arg[0],value=_arg[1],params.push(""+key+"="+encodeURIComponent(value))}),"?"+params.join("&"))},this.clearCache=clearCache=function(){return _cachedETags={}},this.getCache=getCache=function(){return _cachedETags},this.setCache=setCache=function(cachedETags){if(null===cachedETags||"object"!=typeof cachedETags)throw new Error('BUG: argument of method "setCache" should be an object');return _cachedETags=cachedETags},this.onRateLimitChanged=function(listener){return _listeners.push(listener)},this.getZen=function(){return _request("GET","/zen",null,{raw:!0})},this.getAllUsers=function(since){var options;return null==since&&(since=null),options={},since&&(options.since=since),_request("GET","/users",options)},this.getOrgRepos=function(orgName,type){return null==type&&(type="all"),_request("GET","/orgs/"+orgName+"/repos?type="+type+"&per_page=1000&sort=updated&direction=desc",null)},this.getPublicGists=function(since){var getDate,options;return null==since&&(since=null),options=null,getDate=function(time){return Date===time.constructor?time.toISOString():time},since&&(options={since:getDate(since)}),_request("GET","/gists/public",options)},this.getPublicEvents=function(){return _request("GET","/events",null)},this.getNotifications=function(options){var getDate,queryString;return null==options&&(options={}),getDate=function(time){return Date===time.constructor?time.toISOString():time},options.since&&(options.since=getDate(options.since)),queryString=toQueryString(options),_request("GET","/notifications"+queryString,null)},User=function(){function User(_username){var _cachedInfo,_rootPath;null==_username&&(_username=null),_rootPath=_username?"/users/"+_username:"/user",_cachedInfo=null,this.getInfo=function(force){return null==force&&(force=!1),force&&(_cachedInfo=null),_cachedInfo?resolvedPromise(_cachedInfo):_request("GET",""+_rootPath,null).then(function(info){return _cachedInfo=info})},this.getRepos=function(type,sort,direction){return null==type&&(type="all"),null==sort&&(sort="pushed"),null==direction&&(direction="desc"),_request("GET",""+_rootPath+"/repos?type="+type+"&per_page=1000&sort="+sort+"&direction="+direction,null)},this.getOrgs=function(){return _request("GET",""+_rootPath+"/orgs",null)},this.getGists=function(){return _request("GET",""+_rootPath+"/gists",null)},this.getFollowers=function(){return _request("GET",""+_rootPath+"/followers",null)},this.getFollowing=function(){return _request("GET",""+_rootPath+"/following",null)},this.isFollowing=function(user){return _request("GET",""+_rootPath+"/following/"+user,null,{isBoolean:!0})},this.getPublicKeys=function(){return _request("GET",""+_rootPath+"/keys",null)},this.getReceivedEvents=function(onlyPublic){var isPublic;if(!_username)throw new Error("BUG: This does not work for authenticated users yet!");return isPublic="",onlyPublic&&(isPublic="/public"),_request("GET","/users/"+_username+"/received_events"+isPublic,null)},this.getEvents=function(onlyPublic){var isPublic;if(!_username)throw new Error("BUG: This does not work for authenticated users yet!");return isPublic="",onlyPublic&&(isPublic="/public"),_request("GET","/users/"+_username+"/events"+isPublic,null)}}return User}(),AuthenticatedUser=function(_super){function AuthenticatedUser(){AuthenticatedUser.__super__.constructor.call(this),this.updateInfo=function(options){return _request("PATCH","/user",options)},this.getGists=function(){return _request("GET","/gists",null)},this.follow=function(username){return _request("PUT","/user/following/"+username,null)},this.unfollow=function(username){return _request("DELETE","/user/following/"+username,null)},this.getEmails=function(){return _request("GET","/user/emails",null)},this.addEmail=function(emails){return _.isArray(emails)||(emails=[emails]),_request("POST","/user/emails",emails)},this.addEmail=function(emails){return _.isArray(emails)||(emails=[emails]),_request("DELETE","/user/emails",emails)},this.getPublicKey=function(id){return _request("GET","/user/keys/"+id,null)},this.addPublicKey=function(title,key){return _request("POST","/user/keys",{title:title,key:key})},this.updatePublicKey=function(id,options){return _request("PATCH","/user/keys/"+id,options)},this.createRepo=function(name,options){return null==options&&(options={}),options.name=name,_request("POST","/user/repos",options)},this.getReceivedEvents=function(username,page){var currentPage;return null==page&&(page=1),currentPage="?page="+page,_request("GET","/users/"+username+"/received_events"+currentPage,null)},this.getStars=function(){return _request("GET","/user/starred")},this.putStar=function(owner,repo){return _request("PUT","/user/starred/"+owner+"/"+repo)},this.deleteStar=function(owner,repo){return _request("DELETE","/user/starred/"+owner+"/"+repo)}}return __extends(AuthenticatedUser,_super),AuthenticatedUser}(User),Team=function(){function Team(id){this.id=id,this.getInfo=function(){return _request("GET","/teams/"+this.id,null)},this.updateTeam=function(options){return _request("PATCH","/teams/"+this.id,options)},this.remove=function(){return _request("DELETE","/teams/"+this.id)},this.getMembers=function(){return _request("GET","/teams/"+this.id+"/members")},this.isMember=function(user){return _request("GET","/teams/"+this.id+"/members/"+user,null,{isBoolean:!0})},this.addMember=function(user){return _request("PUT","/teams/"+this.id+"/members/"+user)},this.removeMember=function(user){return _request("DELETE","/teams/"+this.id+"/members/"+user)},this.getRepos=function(){return _request("GET","/teams/"+this.id+"/repos")},this.addRepo=function(orgName,repoName){return _request("PUT","/teams/"+this.id+"/repos/"+orgName+"/"+repoName)},this.removeRepo=function(orgName,repoName){return _request("DELETE","/teams/"+this.id+"/repos/"+orgName+"/"+repoName)}}return Team}(),Organization=function(){function Organization(name){this.name=name,this.getInfo=function(){return _request("GET","/orgs/"+this.name,null)},this.updateInfo=function(options){return _request("PATCH","/orgs/"+this.name,options)},this.getTeams=function(){return _request("GET","/orgs/"+this.name+"/teams",null)},this.createTeam=function(name,repoNames,permission){var options;return null==repoNames&&(repoNames=null),null==permission&&(permission="pull"),options={name:name,permission:permission},repoNames&&(options.repo_names=repoNames),_request("POST","/orgs/"+this.name+"/teams",options)},this.getMembers=function(){return _request("GET","/orgs/"+this.name+"/members",null)},this.isMember=function(user){return _request("GET","/orgs/"+this.name+"/members/"+user,null,{isBoolean:!0})},this.removeMember=function(user){return _request("DELETE","/orgs/"+this.name+"/members/"+user,null)},this.createRepo=function(name,options){return null==options&&(options={}),options.name=name,_request("POST","/orgs/"+this.name+"/repos",options)},this.getRepos=function(){return _request("GET","/orgs/"+this.name+"/repos?type=all",null)}}return Organization}(),GitRepo=function(){function GitRepo(repoUser,repoName){var _repoPath;this.repoUser=repoUser,this.repoName=repoName,_repoPath="/repos/"+this.repoUser+"/"+this.repoName,this.deleteRepo=function(){return _request("DELETE",""+_repoPath)},this._updateTree=function(branch){return this.getRef("heads/"+branch)},this.getRef=function(ref){return _request("GET",""+_repoPath+"/git/refs/"+ref,null).then(function(res){return res.object.sha})},this.createRef=function(options){return _request("POST",""+_repoPath+"/git/refs",options)},this.deleteRef=function(ref){return _request("DELETE",""+_repoPath+"/git/refs/"+ref,this.options)},this.getBranches=function(){return _request("GET",""+_repoPath+"/git/refs/heads",null).then(function(heads){return _.map(heads,function(head){return _.last(head.ref.split("/"))})})},this.getBlob=function(sha,isBase64){return _request("GET",""+_repoPath+"/git/blobs/"+sha,null,{raw:!0,isBase64:isBase64})},this.getSha=function(branch,path){return""===path?this.getRef("heads/"+branch):this.getTree(branch,{recursive:!0}).then(function(tree){var file;return file=_.select(tree,function(file){return file.path===path})[0],(null!=file?file.sha:void 0)?null!=file?file.sha:void 0:rejectedPromise({message:"SHA_NOT_FOUND"})})},this.getContents=function(path,sha){var queryString;return null==sha&&(sha=null),queryString="",null!==sha&&(queryString=toQueryString({ref:sha})),_request("GET",""+_repoPath+"/contents/"+path+queryString,null,{raw:!0}).then(function(contents){return contents})},this.removeFile=function(path,message,sha,branch){var params;return params={message:message,sha:sha,branch:branch},_request("DELETE",""+_repoPath+"/contents/"+path,params,null)},this.getTree=function(tree,options){var queryString;return null==options&&(options=null),queryString=toQueryString(options),_request("GET",""+_repoPath+"/git/trees/"+tree+queryString,null).then(function(res){return res.tree})},this.postBlob=function(content,isBase64){return"string"==typeof content&&(isBase64&&(content=base64encode(content)),content={content:content,encoding:"utf-8"}),isBase64&&(content.encoding="base64"),_request("POST",""+_repoPath+"/git/blobs",content).then(function(res){return res.sha})},this.updateTreeMany=function(baseTree,newTree){var data;return data={base_tree:baseTree,tree:newTree},_request("POST",""+_repoPath+"/git/trees",data).then(function(res){return res.sha})},this.postTree=function(tree){return _request("POST",""+_repoPath+"/git/trees",{tree:tree}).then(function(res){return res.sha})},this.commit=function(parents,tree,message){var data;return _.isArray(parents)||(parents=[parents]),data={message:message,parents:parents,tree:tree},_request("POST",""+_repoPath+"/git/commits",data).then(function(commit){return commit.sha})},this.updateHead=function(head,commit,force){var options;return null==force&&(force=!1),options={sha:commit},force&&(options.force=!0),_request("PATCH",""+_repoPath+"/git/refs/heads/"+head,options)},this.getCommit=function(sha){return _request("GET",""+_repoPath+"/commits/"+sha,null)},this.getCommits=function(options){var getDate,queryString;return null==options&&(options={}),options=_.extend({},options),getDate=function(time){return Date===time.constructor?time.toISOString():time},options.since&&(options.since=getDate(options.since)),options.until&&(options.until=getDate(options.until)),queryString=toQueryString(options),_request("GET",""+_repoPath+"/commits"+queryString,null)}}return GitRepo}(),Branch=function(){function Branch(git,getRef){var _getRef,_git;_git=git,_getRef=getRef||function(){throw new Error("BUG: No way to fetch branch ref!")},this.getCommit=function(sha){return _git.getCommit(sha)},this.getCommits=function(options){return null==options&&(options={}),options=_.extend({},options),_getRef().then(function(branch){return options.sha=branch,_git.getCommits(options)})},this.createBranch=function(newBranchName){return _getRef().then(function(branch){return _git.getSha(branch,"").then(function(sha){return _git.createRef({sha:sha,ref:"refs/heads/"+newBranchName})})})},this.read=function(path,isBase64){return _getRef().then(function(branch){return _git.getSha(branch,path).then(function(sha){return _git.getBlob(sha,isBase64).then(function(bytes){return{sha:sha,content:bytes}})})})},this.contents=function(path){return _getRef().then(function(branch){return _git.getSha(branch,"").then(function(sha){return _git.getContents(path,sha).then(function(contents){return contents})})})},this.remove=function(path,message,sha){return null==message&&(message="Removed "+path),null==sha&&(sha=null),_getRef().then(function(branch){return sha?_git.removeFile(path,message,sha,branch):_git.getSha(branch,path).then(function(sha){return _git.removeFile(path,message,sha,branch)})})},this.move=function(path,newPath,message){return null==message&&(message="Moved "+path),_getRef().then(function(branch){return _git._updateTree(branch).then(function(latestCommit){return _git.getTree(latestCommit,{recursive:!0}).then(function(tree){return _.each(tree,function(ref){return ref.path===path&&(ref.path=newPath),"tree"===ref.type?delete ref.sha:void 0}),_git.postTree(tree).then(function(rootTree){return _git.commit(latestCommit,rootTree,message).then(function(commit){return _git.updateHead(branch,commit).then(function(res){return res})})})})})})},this.write=function(path,content,message,isBase64,parentCommitSha){var contents;return null==message&&(message="Changed "+path),null==parentCommitSha&&(parentCommitSha=null),contents={},contents[path]={content:content,isBase64:isBase64},this.writeMany(contents,message,parentCommitSha)},this.writeMany=function(contents,message,parentCommitShas){return null==message&&(message="Changed Multiple"),null==parentCommitShas&&(parentCommitShas=null),_getRef().then(function(branch){var afterParentCommitShas;return afterParentCommitShas=function(parentCommitShas){var promises;return promises=_.map(_.pairs(contents),function(_arg){var content,data,isBase64,path;return path=_arg[0],data=_arg[1],content=data.content||data,isBase64=data.isBase64||!1,_git.postBlob(content,isBase64).then(function(blob){return{path:path,mode:"100644",type:"blob",sha:blob}})}),allPromises(promises).then(function(newTrees){return _git.updateTreeMany(parentCommitShas,newTrees).then(function(tree){return _git.commit(parentCommitShas,tree,message).then(function(commitSha){return _git.updateHead(branch,commitSha).then(function(res){return res.object})})})})},parentCommitShas?afterParentCommitShas(parentCommitShas):_git._updateTree(branch).then(afterParentCommitShas)})}}return Branch}(),Repository=function(){function Repository(options){var _repo,_user;this.options=options,_user=this.options.user,_repo=this.options.name,this.git=new GitRepo(_user,_repo),this.repoPath="/repos/"+_user+"/"+_repo,this.currentTree={branch:null,sha:null},this.updateInfo=function(options){return _request("PATCH",this.repoPath,options)},this.getBranches=function(){return this.git.getBranches()},this.getBranch=function(branchName){var getRef;return null==branchName&&(branchName=null),branchName?(getRef=function(){return resolvedPromise(branchName)},new Branch(this.git,getRef)):this.getDefaultBranch()},this.getDefaultBranch=function(){var getRef,_this=this;return getRef=function(){return _this.getInfo().then(function(info){return info.default_branch})},new Branch(this.git,getRef)},this.setDefaultBranch=function(branchName){return this.updateInfo({name:_repo,default_branch:branchName})},this.getInfo=function(){return _request("GET",this.repoPath,null)},this.getContents=function(branch,path){return _request("GET",""+this.repoPath+"/contents?ref="+branch,{path:path})},this.fork=function(organization){return organization?_request("POST",""+this.repoPath+"/forks",{organization:organization}):_request("POST",""+this.repoPath+"/forks",null)},this.createPullRequest=function(options){return _request("POST",""+this.repoPath+"/pulls",options)},this.getCommits=function(options){return this.git.getCommits(options)},this.getEvents=function(){return _request("GET",""+this.repoPath+"/events",null)},this.getIssueEvents=function(){return _request("GET",""+this.repoPath+"/issues/events",null)},this.getNetworkEvents=function(){return _request("GET","/networks/"+_user+"/"+_repo+"/events",null)},this.getNotifications=function(options){var getDate,queryString;return null==options&&(options={}),getDate=function(time){return Date===time.constructor?time.toISOString():time},options.since&&(options.since=getDate(options.since)),queryString=toQueryString(options),_request("GET",""+this.repoPath+"/notifications"+queryString,null)},this.getCollaborators=function(){return _request("GET",""+this.repoPath+"/collaborators",null)},this.addCollaborator=function(username){if(!username)throw new Error("BUG: username is required");return _request("PUT",""+this.repoPath+"/collaborators/"+username,null,{isBoolean:!0})},this.removeCollaborator=function(username){if(!username)throw new Error("BUG: username is required");return _request("DELETE",""+this.repoPath+"/collaborators/"+username,null,{isBoolean:!0})},this.isCollaborator=function(username){if(null==username&&(username=null),!username)throw new Error("BUG: username is required");return _request("GET",""+this.repoPath+"/collaborators/"+username,null,{isBoolean:!0})},this.canCollaborate=function(){var _this=this;return clientOptions.password||clientOptions.token?_client.getLogin().then(function(login){return login?_this.isCollaborator(login):!1}).then(null,function(err){return!1}):resolvedPromise(!1)},this.getHooks=function(){return _request("GET",""+this.repoPath+"/hooks",null)},this.getHook=function(id){return _request("GET",""+this.repoPath+"/hooks/"+id,null)},this.createHook=function(name,config,events,active){var data;return null==events&&(events=["push"]),null==active&&(active=!0),data={name:name,config:config,events:events,active:active},_request("POST",""+this.repoPath+"/hooks",data)},this.editHook=function(id,config,events,addEvents,removeEvents,active){var data;return null==config&&(config=null),null==events&&(events=null),null==addEvents&&(addEvents=null),null==removeEvents&&(removeEvents=null),null==active&&(active=null),data={},null!==config&&(data.config=config),null!==events&&(data.events=events),null!==addEvents&&(data.add_events=addEvents),null!==removeEvents&&(data.remove_events=removeEvents),null!==active&&(data.active=active),_request("PATCH",""+this.repoPath+"/hooks/"+id,data)},this.testHook=function(id){return _request("POST",""+this.repoPath+"/hooks/"+id+"/tests",null)},this.deleteHook=function(id){return _request("DELETE",""+this.repoPath+"/hooks/"+id,null)},this.getLanguages=function(){return _request("GET",""+this.repoPath+"/languages",null)},this.getReleases=function(){return _request("GET",""+this.repoPath+"/releases",null)}}return Repository}(),Gist=function(){function Gist(options){var id,_gistPath;this.options=options,id=this.options.id,_gistPath="/gists/"+id,this.read=function(){return _request("GET",_gistPath,null)},this.create=function(files,isPublic,description){return null==isPublic&&(isPublic=!1),null==description&&(description=null),options={isPublic:isPublic,files:files},null!=description&&(options.description=description),_request("POST","/gists",options)},this["delete"]=function(){return _request("DELETE",_gistPath,null)},this.fork=function(){return _request("POST",""+_gistPath+"/forks",null)},this.update=function(files,description){return null==description&&(description=null),options={files:files},null!=description&&(options.description=description),_request("PATCH",_gistPath,options)},this.star=function(){return _request("PUT",""+_gistPath+"/star")},this.unstar=function(){return _request("DELETE",""+_gistPath+"/star")},this.isStarred=function(){return _request("GET",""+_gistPath,null,{isBoolean:!0})}}return Gist}(),this.getRepo=function(user,repo){if(!user)throw new Error("BUG! user argument is required");if(!repo)throw new Error("BUG! repo argument is required");return new Repository({user:user,name:repo})},this.getOrg=function(name){return new Organization(name)},this.getUser=function(login){return null==login&&(login=null),login?new User(login):clientOptions.password||clientOptions.token?new AuthenticatedUser:null},this.getGist=function(id){return new Gist({id:id})},this.getLogin=function(){return clientOptions.password||clientOptions.token?(new User).getInfo().then(function(info){return info.login}):resolvedPromise(null)}}return Octokit}()},"undefined"!=typeof exports&&null!==exports?(Promise=this.Promise||require("es6-promise").Promise,XMLHttpRequest=this.XMLHttpRequest||require("xmlhttprequest").XMLHttpRequest,newPromise=function(fn){return new Promise(fn)},allPromises=function(promises){return Promise.all.call(Promise,promises)},encode=this.btoa||function(str){var buffer;return buffer=new Buffer(str,"binary"),buffer.toString("base64")},Octokit=makeOctokit(newPromise,allPromises,XMLHttpRequest,encode,"octokit"),exports["new"]=function(options){return new Octokit(options)}):(createGlobalAndAMD=function(newPromise,allPromises){return null!=_this.define?_this.define("octokit",[],function(){return makeOctokit(newPromise,allPromises,_this.XMLHttpRequest,_this.btoa)}):(Octokit=makeOctokit(newPromise,allPromises,_this.XMLHttpRequest,_this.btoa),_this.Octokit=Octokit,_this.Github=Octokit)},this.Q?(newPromise=function(fn){var deferred,reject,resolve;return deferred=_this.Q.defer(),resolve=function(val){return deferred.resolve(val)},reject=function(err){return deferred.reject(err)},fn(resolve,reject),deferred.promise},allPromises=function(promises){return this.Q.all(promises)},createGlobalAndAMD(newPromise,allPromises)):this.angular?(injector=angular.injector(["ng"]),injector.invoke(function($q){return newPromise=function(fn){var deferred,reject,resolve;return deferred=$q.defer(),resolve=function(val){return deferred.resolve(val)},reject=function(err){return deferred.reject(err)},fn(resolve,reject),deferred.promise},allPromises=function(promises){return $q.all(promises)},createGlobalAndAMD(newPromise,allPromises)})):(null!=(_ref=this.jQuery)?_ref.Deferred:void 0)?(newPromise=function(fn){var promise,reject,resolve;return promise=_this.jQuery.Deferred(),resolve=function(val){return promise.resolve(val)},reject=function(val){return promise.reject(val)},fn(resolve,reject),promise.promise()},allPromises=function(promises){var _ref1;return(_ref1=_this.jQuery).when.apply(_ref1,promises).then(function(){var promises;return promises=1<=arguments.length?__slice.call(arguments,0):[]})},createGlobalAndAMD(newPromise,allPromises)):this.Promise?(newPromise=function(fn){return new _this.Promise(function(resolve,reject){return resolve.fulfill?fn(resolve.resolve.bind(resolve),resolve.reject.bind(resolve)):fn.apply(null,arguments)})},allPromises=function(promises){return _this.Promise.all.call(_this.Promise,promises)},createGlobalAndAMD(newPromise,allPromises)):(err=function(msg){throw"undefined"!=typeof console&&null!==console&&"function"==typeof console.error&&console.error(msg),new Error(msg)})("A Promise API was not found. Supported libraries that have Promises are jQuery, angularjs, and https://github.com/jakearchibald/es6-promise"))}).call(this);